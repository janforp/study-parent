/*
 * ???????????????????????
 */

package dsa;

public abstract class BFS extends GraphTraverse {

	//??????
	public BFS(Graph g) {
		super(g);
	}

	//????????????
	protected Object traverse(Vertex s, Object info) {//?????s??????????????????
		if (UNDISCOVERED != s.getStatus()) {
			return null;//?????????????????????????
		}
		Queue Q = new Queue_List();//???????????
		s.setStatus(DISCOVERED);//????s??
		Q.enqueue(s);//?漴???????
		visit(s, null);//???????
		while (!Q.isEmpty()) {//????б????
			Vertex v = (Vertex) Q.dequeue();//??????????v
			for (Iterator it = v.outEdges(); it.hasNext(); ) {//???????v
				Edge e = (Edge) it.getNext();//?????e = (v, u)
				Vertex u = (Vertex) e.getVPosInV(1).getElem();//????????????u
				if (UNDISCOVERED == u.getStatus()) {//??u??δ?????????
					e.setType(TREE);//??e?????????
					u.setStatus(DISCOVERED);//????u??
					Q.enqueue(u);//?漴???????
					visit(u, v);//???????
				} else {//??u????????????????????????????????
					e.setType(CROSS);//??e????????
				}
			}//?????v??????????????????????
			v.setStatus(VISITED);//??v????VISITED
		}//while
		return null;
	}
}
