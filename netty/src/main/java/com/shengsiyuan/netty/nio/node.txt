java.io中最核心的概念是 Stream,面向流编程，java中，一个Stream中要么是输入流，要么是输出流，不可能同时兼得

java.nio中有三个核心概念：Selector，Channel,Buffer。zai java.nio中我们是面向块（block）或者缓冲区编程的。
buffer本身就是一块内存，底层实现是一个数组，数据的读写都是通过buffer实现的

除了数组之外，buffer 还提供了对于数据的结构化访问方式，并且可以追踪到系统的读写过程

Java中的8种原生数据类型都有对应的Buffer类型，如IntBuffer,LongBuffer等。

Channel指的是可以向其写入数据或是从中读取数据，他类似于java.io中的Stream
所有的数据的读写都是通过Buffer来进行的，永远不会出现直接向channel写入数据的情况，或者直接从channel读取数据的情况。
与Stream不同的是channel是双向的。可以进行读，写或者读写

由于channel是双向的，因此他能更好的反映出底层操作系统的真是情况，比如在linux系统中，底层操作系统的通道就是双向的。
